{"version":3,"sources":["components/Header.tsx","components/Footer.tsx","components/Input.tsx","components/InputBox.tsx","images/closed-bin.png","images/open-bin.png","images/pen.png","images/pen-and-paper.png","components/ListItem.tsx","components/TableList.tsx","components/OutputBox.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","title","className","Footer","year","Date","getFullYear","href","Input","placeholder","value","setValue","type","max","onChange","e","target","InputBox","setTitle","author","setAuthor","toRead","setToRead","edit","addBook","updateBook","useState","errorMessage","setErrorMessage","name","id","checked","onClick","preventDefault","randomId","Math","floor","random","setTimeout","ListItem","book","removeBook","editBook","src","closedPen","alt","onMouseOver","currentTarget","openPen","onMouseLeave","closedBin","openBin","TableList","booksArray","reverse","map","OutputBox","books","filter","isRead","App","setBooks","setEdit","index","newBook","forEach","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAEaA,EAAsC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpD,OACE,yBAAQC,UAAU,cAAlB,UACE,6BAAKD,IACL,oECJOE,EAAmB,WAC9B,IAAMC,GAAe,IAAIC,MAAOC,cAEhC,OACE,wBAAQJ,UAAU,cAAlB,SACE,oBAAGK,KAAK,6BAA6BN,MAAM,oBAA3C,kCAAuFG,QCDhFI,EAAyB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC3D,OACE,uBACEC,KAAK,OACLH,YAAaA,EACbI,IAAI,MACJH,MAAOA,EACPI,SAAU,SAACC,GAAQJ,EAASI,EAAEC,OAAON,WCE9BO,EAA4B,SAAC,GAA0F,IAAxFhB,EAAuF,EAAvFA,MAAOiB,EAAgF,EAAhFA,SAAUC,EAAsE,EAAtEA,OAAQC,EAA8D,EAA9DA,UAAWC,EAAmD,EAAnDA,OAAQC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAEhH,EAAwCC,mBAAiB,IAAzD,mBAAOC,EAAP,KAAqBC,EAArB,KAgCA,OACE,uBAAM1B,UAAU,YAAhB,UACE,cAAC,EAAD,CAAOO,YAAY,WAAWC,MAAOT,EAAOU,SAAUO,IACtD,cAAC,EAAD,CAAOT,YAAY,YAAYC,MAAOS,EAAQR,SAAUS,IACxD,qBAAKlB,UAAU,gBAAf,SAAgCyB,IAChC,sBAAKzB,UAAU,qBAAf,UAAoC,2CAAoB,uBAAOU,KAAK,WAAWiB,KAAK,OAAOC,GAAG,OAAOC,QAASV,EAAQP,SAAU,kBAAMQ,GAAWD,MAAW,2CAC3JE,EAAO,wBAAQX,KAAK,SAASoB,QArBf,SAACjB,GAGlB,GAFAA,EAAEkB,iBAEGhC,GAAUkB,EAKR,CACL,IAAIe,EAAmBC,KAAKC,MAAsB,IAAhBD,KAAKE,UAEvCZ,EAAWS,EAAUjC,EAAOkB,EAAQE,QAPpCO,EAAgB,kCAChBU,YAAW,WACTV,EAAgB,MACf,MAcK,2BAAoE,wBAAQhB,KAAK,SAASoB,QApCpF,SAACjB,GAGjB,GAFAA,EAAEkB,iBAEGhC,GAAUkB,EAKR,CACL,IAAIe,EAAmBC,KAAKC,MAAsB,IAAhBD,KAAKE,UAEvCb,EAAQU,EAAUjC,EAAOkB,EAAQE,QAPjCO,EAAgB,kCAChBU,YAAW,WACTV,EAAgB,MACf,MA6ByE,0BCvDnE,MAA0B,uCCA1B,MAA0B,qCCA1B,MAA0B,gCCA1B,MAA0B,0CCY5BW,EAA4B,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAC5D,OACE,+BACE,6BAAKF,EAAKvC,QACV,6BAAKuC,EAAKrB,SACV,oBAAIa,QAAS,kBAAMU,EAASF,EAAKV,KAAjC,SACE,qBAAK5B,UAAU,OACbyC,IAAKC,EAAWC,IAAI,mBACpBC,YAAa,SAAC/B,GAAD,OAAQA,EAAEgC,cAAcJ,IAAMK,GAC3CC,aAAc,SAAClC,GAAD,OAAQA,EAAEgC,cAAcJ,IAAMC,OAGhD,oBAAIZ,QAAS,kBAAMS,EAAWD,EAAKV,KAAnC,SACE,qBAAK5B,UAAU,OACbyC,IAAKO,EAAWL,IAAI,mBACpBC,YAAa,SAAC/B,GAAD,OAAQA,EAAEgC,cAAcJ,IAAMQ,GAC3CF,aAAc,SAAClC,GAAD,OAAQA,EAAEgC,cAAcJ,IAAMO,SAdzCV,EAAKV,KCELsB,EAA6B,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,WAAYZ,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACnE,OACE,kCACE,gCACE,+BACE,uCACA,wCACA,uBACA,4BAGJ,gCACG,YAAIW,GAAYC,UAAUC,KAAI,SAACf,GAAD,OAC7B,cAAC,EAAD,CAAwBA,KAAMA,EAAMC,WAAYA,EAAYC,SAAUA,GAAvDF,EAAKV,aCdjB0B,EAA6B,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOhB,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAE9D,OACE,sBAAKxC,UAAU,aAAf,UACE,oBAAIA,UAAU,cAAd,4BACA,cAAC,EAAD,CAAWmD,WAAYI,EAAMC,QAAO,SAAAlB,GAAI,OAAKA,EAAKmB,UAASlB,WAAYA,EAAYC,SAAUA,IAC7F,oBAAIxC,UAAU,cAAd,yBACA,cAAC,EAAD,CAAWmD,WAAYI,EAAMC,QAAO,SAAAlB,GAAI,OAAIA,EAAKmB,UAASlB,WAAYA,EAAYC,SAAUA,QCiDnFkB,MAhEf,WAQE,MAA0BlC,mBAAkB,CAC1C,CAAEI,GAAI,EAAG7B,MAAO,gBAAiBkB,OAAQ,eAAgBwC,QAAQ,GACjE,CAAE7B,GAAI,EAAG7B,MAAO,wBAAyBkB,OAAQ,cAAewC,QAAQ,GACxE,CAAE7B,GAAI,EAAG7B,MAAO,sCAAuCkB,OAAQ,gBAAiBwC,QAAQ,GACxF,CAAE7B,GAAI,EAAG7B,MAAO,sBAAuBkB,OAAQ,oBAAqBwC,QAAQ,GAC5E,CAAE7B,GAAI,EAAG7B,MAAO,aAAckB,OAAQ,kBAAmBwC,QAAQ,GACjE,CAAE7B,GAAI,EAAG7B,MAAO,sBAAuBkB,OAAQ,eAAgBwC,QAAQ,GACvE,CAAE7B,GAAI,EAAG7B,MAAO,OAAQkB,OAAQ,gBAAiBwC,QAAQ,GACzD,CAAE7B,GAAI,EAAG7B,MAAO,iBAAkBkB,OAAQ,gBAAiBwC,QAAQ,KARrE,mBAAOF,EAAP,KAAcI,EAAd,KAWA,EAA0BnC,mBAAiB,IAA3C,mBAAOzB,EAAP,KAAciB,EAAd,KACA,EAA4BQ,mBAAiB,IAA7C,mBAAOP,EAAP,KAAeC,EAAf,KACA,EAA4BM,oBAAkB,GAA9C,mBAAOL,EAAP,KAAeC,EAAf,KACA,EAAwBI,oBAAkB,GAA1C,mBAAOH,EAAP,KAAauC,EAAb,KAEMrB,EAAa,SAACsB,GAClBF,EAASJ,EAAMC,QAAO,SAAClB,GAAD,OAAUA,EAAKV,KAAOiC,OAGxCvC,EAAU,SAACM,EAAY7B,EAAekB,EAAgBwC,GAC1D,IAAIK,EAAU,CAAElC,KAAI7B,QAAOkB,SAAQwC,UAEnCE,EAAS,GAAD,mBAAKJ,GAAL,CAAYO,KACpB9C,EAAS,IACTE,EAAU,KAmBZ,OACE,mCACE,sBAAKlB,UAAU,YAAf,UACE,cAAC,EAAD,CAAQD,MAAM,iBACd,cAAC,EAAD,CAAUwB,WATG,SAACK,EAAY7B,EAAekB,EAAgBwC,GAC7DnC,EAAQM,EAAI7B,EAAOkB,EAAQwC,GAC3BG,GAAQ,IAO8BtC,QAASA,EAASD,KAAMA,EAAMtB,MAAOA,EAAOiB,SAAUA,EAAUC,OAAQA,EAAQC,UAAWA,EAAWC,OAAQA,EAAQC,UAAWA,IACnK,cAAC,EAAD,CAAWmB,WAAYA,EAAYgB,MAAOA,EAAOf,SArBtC,SAACqB,GAChBN,EAAMQ,SAAS,SAACzB,GACVA,EAAKV,KAAOiC,IACd7C,EAASsB,EAAKvC,OACdmB,EAAUoB,EAAKrB,QACf2C,GAAQ,GACRrB,EAAWD,EAAKV,WAgBhB,cAAC,EAAD,UCnDOoC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.46c61b86.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header: React.FC<{ title: string }> = ({ title }) => {\n  return (\n    <header className='text-center'>\n      <h1>{title}</h1>\n      <p>Keep track of your reading list</p>\n    </header>\n  )\n}\n","import React from 'react'\n\nexport const Footer: React.FC = () => {\n  const year: number = new Date().getFullYear();\n\n  return (\n    <footer className='text-center'>\n      <a href='https://whitforddesign.ca/' title=\"whitforddesign.ca\">&copy; Whitford Design {year}</a>\n    </footer>\n  )\n}\n","interface Props {\n  placeholder: string;\n  value?: string;\n  setValue: (value: string) => void;\n}\n\nexport const Input: React.FC<Props> = ({ placeholder, value, setValue }) => {\n  return (\n    <input\n      type='text'\n      placeholder={placeholder}\n      max='100'\n      value={value}\n      onChange={(e) => { setValue(e.target.value) }}\n    />\n  )\n}\n","import React, { useState } from 'react'\nimport { Input } from './Input';\n\ninterface Props {\n  title: string;\n  setTitle: (title: string) => void;\n  author: string;\n  setAuthor: (author: string) => void;\n  toRead: boolean;\n  setToRead: (isRead: boolean) => void;\n  edit: boolean;\n  addBook: (id: number, title: string, author: string, isRead: boolean) => void;\n  updateBook: (id: number, title: string, author: string, isRead: boolean) => void;\n}\n\nexport const InputBox: React.FC<Props> = ({ title, setTitle, author, setAuthor, toRead, setToRead, edit, addBook, updateBook }) => {\n\n  const [errorMessage, setErrorMessage] = useState<string>('');\n\n  const handleAdd = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    if (!title || !author) {\n      setErrorMessage('Pleae fill in title and author');\n      setTimeout(() => {\n        setErrorMessage('');\n      }, 3000)\n    } else {\n      let randomId: number = Math.floor(Math.random() * 1000);\n\n      addBook(randomId, title, author, toRead);\n    }\n  }\n\n  const handleEdit = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    if (!title || !author) {\n      setErrorMessage('Pleae fill in title and author');\n      setTimeout(() => {\n        setErrorMessage('');\n      }, 3000)\n    } else {\n      let randomId: number = Math.floor(Math.random() * 1000);\n\n      updateBook(randomId, title, author, toRead);\n    }\n  }\n\n  return (\n    <form className='input-box'>\n      <Input placeholder='Title...' value={title} setValue={setTitle} />\n      <Input placeholder='Author...' value={author} setValue={setAuthor} />\n      <div className='error-message'>{errorMessage}</div>\n      <div className=\"checkbox-container\"><span>To Read</span><input type=\"checkbox\" name=\"read\" id=\"read\" checked={toRead} onChange={() => setToRead(!toRead)} /><span>Read</span></div>\n      {edit ? <button type=\"submit\" onClick={handleEdit}>Confirm Edits</button> : <button type=\"submit\" onClick={handleAdd}>Add Book</button>}\n    </form>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/closed-bin.a6fd2950.png\";","export default __webpack_public_path__ + \"static/media/open-bin.ccb73794.png\";","export default __webpack_public_path__ + \"static/media/pen.51bb6b37.png\";","export default __webpack_public_path__ + \"static/media/pen-and-paper.0f46e272.png\";","import React from 'react'\nimport closedBin from '../images/closed-bin.png';\nimport openBin from '../images/open-bin.png';\nimport closedPen from '../images/pen.png';\nimport openPen from '../images/pen-and-paper.png';\n\ninterface Props {\n  book: { id: number, title: string, author: string };\n  removeBook: (bookID: number) => void;\n  editBook: (bookID: number) => void;\n}\n\nexport const ListItem: React.FC<Props> = ({ book, removeBook, editBook }) => {\n  return (\n    <tr key={book.id}>\n      <td>{book.title}</td>\n      <td>{book.author}</td>\n      <td onClick={() => editBook(book.id)}>\n        <img className='icon'\n          src={closedPen} alt='Delete Trash Bin'\n          onMouseOver={(e) => (e.currentTarget.src = openPen)}\n          onMouseLeave={(e) => (e.currentTarget.src = closedPen)}\n        />\n      </td>\n      <td onClick={() => removeBook(book.id)}>\n        <img className='icon'\n          src={closedBin} alt='Delete Trash Bin'\n          onMouseOver={(e) => (e.currentTarget.src = openBin)}\n          onMouseLeave={(e) => (e.currentTarget.src = closedBin)}\n        />\n      </td>\n    </tr>\n  )\n}\n","import React from 'react'\nimport { ListItem } from './ListItem'\n\ninterface Books {\n  id: number;\n  title: string;\n  author: string;\n  isRead: boolean;\n}\n\ninterface Props {\n  booksArray: Books[];\n  removeBook: (bookID: number) => void;\n  editBook: (bookID: number) => void;\n}\n\nexport const TableList: React.FC<Props> = ({ booksArray, removeBook, editBook }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Author</th>\n          <th></th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        {[...booksArray].reverse().map((book) => (\n          <ListItem key={book.id} book={book} removeBook={removeBook} editBook={editBook} />\n        ))}\n      </tbody>\n    </table>\n  )\n}\n","import { TableList } from './TableList';\n\ninterface Books {\n  id: number;\n  title: string;\n  author: string;\n  isRead: boolean;\n}\n\ninterface Props {\n  books: Books[];\n  removeBook: (index: number) => void;\n  editBook: (index: number) => void;\n}\n\nexport const OutputBox: React.FC<Props> = ({ books, removeBook, editBook }) => {\n\n  return (\n    <div className='output-box'>\n      <h2 className='text-center'>Books to Read:</h2>\n      <TableList booksArray={books.filter(book => !book.isRead)} removeBook={removeBook} editBook={editBook} />\n      <h2 className='text-center'>Books Read:</h2>\n      <TableList booksArray={books.filter(book => book.isRead)} removeBook={removeBook} editBook={editBook} />\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport './App.css';\nimport { Header } from './components/Header'\nimport { Footer } from './components/Footer'\nimport { InputBox } from './components/InputBox'\nimport { OutputBox } from './components/OutputBox';\n\nfunction App() {\n  interface Books {\n    id: number;\n    title: string;\n    author: string;\n    isRead: boolean;\n  }\n\n  const [books, setBooks] = useState<Books[]>([\n    { id: 1, title: 'Into Thin Air', author: 'Jon Krakauer', isRead: true },\n    { id: 2, title: 'A Gentleman in Moscow', author: 'Amor Towles', isRead: true },\n    { id: 3, title: 'The Hitchhikers Guide to the Galaxy', author: 'Douglas Adams', isRead: true },\n    { id: 4, title: 'Running To The Edge', author: 'Matthew Futterman', isRead: true },\n    { id: 5, title: 'Just Mercy', author: 'Bryan Stevenson', isRead: true },\n    { id: 6, title: 'Where Men Win Glory', author: 'Jon Krakauer', isRead: false },\n    { id: 7, title: 'Dune', author: 'Frank Herbret', isRead: false },\n    { id: 8, title: 'The Fifth Risk', author: 'Michael Lewis', isRead: false }\n  ])\n\n  const [title, setTitle] = useState<string>('');\n  const [author, setAuthor] = useState<string>('');\n  const [toRead, setToRead] = useState<boolean>(false);\n  const [edit, setEdit] = useState<boolean>(false);\n\n  const removeBook = (index: number): void => {\n    setBooks(books.filter((book) => book.id !== index));\n  }\n\n  const addBook = (id: number, title: string, author: string, isRead: boolean): void => {\n    let newBook = { id, title, author, isRead }\n\n    setBooks([...books, newBook]);\n    setTitle('');\n    setAuthor('');\n  }\n\n  const editBook = (index: number): void => {\n    books.forEach(((book) => {\n      if (book.id === index) {\n        setTitle(book.title);\n        setAuthor(book.author);\n        setEdit(true);\n        removeBook(book.id);\n      }\n    }))\n  }\n\n  const updateBook = (id: number, title: string, author: string, isRead: boolean): void => {\n    addBook(id, title, author, isRead)\n    setEdit(false);\n  }\n\n  return (\n    <>\n      <div className=\"container\">\n        <Header title=\"Nick's Books\" />\n        <InputBox updateBook={updateBook} addBook={addBook} edit={edit} title={title} setTitle={setTitle} author={author} setAuthor={setAuthor} toRead={toRead} setToRead={setToRead} />\n        <OutputBox removeBook={removeBook} books={books} editBook={editBook} />\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}